targets = [
    { triple = "x86_64-unknown-linux-gnu" },
    { triple = "x86_64-unknown-linux-musl" },
    { triple = "x86_64-apple-darwin" },
    { triple = "x86_64-pc-windows-msvc" },
]

[advisories]
vulnerability = "deny"
unmaintained = "deny"
notice = "deny"
ignore = []

[licenses]
unlicensed = "deny"
copyleft = "deny"
allow-osi-fsf-free = "neither"
confidence-threshold = 0.93
default = "deny"
private = { ignore = true }
allow = [ "Apache-2.0", "MIT", "Unlicense", "Zlib", "MPL-2.0", "ISC" ]
exceptions = []

[[licenses.clarify]]
name = "ring"
expression = "MIT AND ISC AND OpenSSL"
license-files = [
    { path = "LICENSE", hash = 0xbd0eed23 },
]

[[licenses.clarify]]
name = "webpki"
expression = "ISC"
license-files = [
    { path = "LICENSE", hash = 0x001c7e6c },
]

[bans]
multiple-versions = "deny"
highlight = "all"
skip = [    
    # Blocked on xml5ever bumping time to 0.2.x
    { name = "time", version = "0.1.44" },
    
    # Blocked on http updating bytes to 1.0.x
    { name = "bytes", version = "1.0.0" },
    
    # Blocked on phf_generator updating rand to 0.8.x
    { name = "getrandom", version = "0.1.16" },
    { name = "rand_core", version = "0.5.1" },
    { name = "rand_chacha", version = "0.2.2" },
    { name = "rand", version = "0.7.3" },
]

# Mostly soundness denies since the advisory lacks a section for soundess bugs
deny = [
    # https://github.com/RustSec/advisory-db/issues/298
    { name = "linked-hash-map", version = "<0.5.3" },
    
    # https://github.com/RustSec/advisory-db/pull/290
    { name = "bigint", version = "*" },
    
    # https://github.com/RustSec/advisory-db/pull/293
    # NOTE: May be sound in the future: https://github.com/RustSec/advisory-db/pull/293#issuecomment-641898680
    { name = "rio", version = "*" },

    # https://github.com/RustSec/advisory-db/issues/299
    { name = "smallvec", version = "<0.6.13" },
    
    # https://github.com/RustSec/advisory-db/pull/268
    { name = "plutonium", version = "*" },
    
    # https://github.com/RustSec/advisory-db/pull/308
    { name = "traitobject", version = "*" },
    
    # https://github.com/RustSec/advisory-db/issues/305
    { name = "rental", version = "*" },
    
    # Appears to be moving towards integrating rio more tightly for io_uring support
    { name = "sled", version = "*" },
    
    # The general idea seems unsound, and the current version does contain UB.
    # https://github.com/Kimundi/owning-ref-rs/issues/71
    { name = "owning_ref", version = "*" },
    
    # It's a crate only intended for testing; people insist on using it for some reason.
    # https://crates.io/crates/markup5ever_rcdom/0.1.0
    { name = "markup5ever_rcdom", version = "0.1.0" },
]

[sources]
unknown-registry = "deny"
unknown-git = "deny"
allow-registry = [ "https://github.com/rust-lang/crates.io-index" ]
allow-git = []
